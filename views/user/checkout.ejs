<!-- component -->
<!DOCTYPE html>
<html class="border-l" lang="en">
<head>
    <meta charset="UTF-8">
    <link rel="stylesheet" href="dist/output.css">
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">  
  
    <style>
        * {
            margin: 0;
            padding: 0;
        }
        fieldset label span {
            min-width: 125px;
        }
        fieldset .select::after {
            content: '';
            position: absolute;
            width: 9px;
            height: 5px;
            right: 20px;
            top: 50%;
            margin-top: -2px;
            background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='9' height='5' viewBox='0 0 9 5'><title>Arrow</title><path d='M.552 0H8.45c.58 0 .723.359.324.795L5.228 4.672a.97.97 0 0 1-1.454 0L.228.795C-.174.355-.031 0 .552 0z' fill='%23CFD7DF' fill-rule='evenodd'/></svg>");
            pointer-events: none;
        }
    </style>
</head>
<body class="w-screen overflow-x-hidden">

    <%- include("../partials/navbar.ejs") %>

    <div class=" grid grid-cols-3  pt-10  pb-10">
    <div class="lg:col-span-2 col-span-3  px-12">
           
 <!-- Button to trigger the add -->
 <button id="openModal" class="bg-blue-500 mt-6 text-white font-bold py-2 px-4 rounded inline-block">ADD ADDRESS +</button><br>

 <!-- ++++++++++++++++++++++++++++++++++++++++++++++++     ADD ADDRESS    ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
 <div id="myModal" class="fixed inset-0 z-50 hidden overflow-auto bg-black bg-opacity-50">
   <div class="flex items-center justify-center h-full">
     <div class="bg-white p-8 rounded shadow-lg">

       <div class="flex justify-end">
         <button id="closeModal" class="text-gray-600 hover:text-gray-800">&times;</button>
       </div>

       <div>
         <h2 class="font-semibold text-xl text-gray-600">ADD ADDRESS</h2>

         <div class="bg-white rounded shadow-lg p-4 px-4 md:p-8 mb-6">
           <div class="grid gap-4 gap-y-2 text-sm grid-cols-1 lg:grid-cols-3">
             <div class="text-gray-600">
               <p class="font-medium text-lg">Personal Details</p>
               <p>Add your personal details.</p>
             </div>
             
             <form action="/addressPost" id="formData" method="post" onsubmit="return v()">
               <div class="lg:col-span-4">
                 <div class="grid gap-4 gap-y-2 text-sm grid-cols-2 md:grid-cols-2">
                 
                   <div class="md:col-span-3">
                     <label for="">Full Name</label>
                     <input oninput="nameValidation()" type="text" name="full_name" id="full_name"
                       class="h-10 border mt-1 rounded px-4 w-full bg-gray-50" value=""  />
                       <p id="nameError" class="text-xs text-red-500"></p>
                   </div>
            

                 <div class="md:col-span-5">
                   <label for="">Address / Street</label>
                   <input oninput="addressValidation()" type="text" name="address" id="address"
                     class="h-10 border mt-1 rounded px-4 w-full bg-gray-50" value="" placeholder="" />
                     <p id="addressError" class="text-xs text-red-500"></p>
                   </div>

                 <div class="md:col-span-3">
                   <label for="">Phone number</label>
                   <input oninput="numberValidation()" type="text" name="phone" id="phone"
                     class="transition-all flex items-center h-10 border mt-1 rounded px-4 w-full bg-gray-50"
                     placeholder="" value="" />
                     <p id="phoneError" class="text-xs text-red-500"></p>
                 </div>

                 <div class="md:col-span-3 ">
                   <label for="city">City</label>
                   <input type="text" name="city" id="city" class="h-10 border mt-1 rounded px-4 w-full bg-gray-50"
                     value="" placeholder="" />
                 </div>

                 <div class="md:col-span-2">
                   <label for="country">Country / region</label>
                   <div class="h-10 bg-gray-50 flex border border-gray-200 rounded items-center mt-1">
                     <input  id="country" placeholder="Country"
                       class="px-4 appearance-none outline-none text-gray-800 w-full bg-transparent" value="" />
                       <select name="country" class="border-none bg-transparent flex-1 cursor-pointer appearance-none focus:outline-none">
                         <option value="AU">Australia</option>
                         <option value="BE">Belgium</option> 
                         <option value="BR">Brazil</option>
                         <option value="CA">Canada</option>
                         <option value="CN">China</option>
                         <option value="DK">Denmark</option>
                         <option value="FI">Finland</option>
                         <option value="FR">France</option>
                         <option value="DE">Germany</option>
                         <option value="HK">Hong Kong</option>
                         <option value="IE">Ireland</option>
                         <option value="IT">Italy</option>
                         <option value="JP">Japan</option>
                         <option value="LU">Luxembourg</option>
                         <option value="MX">Mexico</option>
                         <option value="NL">Netherlands</option>
                         <option value="PL">Poland</option>
                         <option value="PT">Portugal</option>
                         <option value="SG">Singapore</option>
                         <option value="ES">Spain</option>
                         <option value="TN">Tunisia</option>
                         <option value="GB">United Kingdom</option>
                         <option value="US" selected="selected">United States</option>
                     </select>
                   </div>
                 </div>

                 <div class="md:col-span-3">
                   <label for="state">State / province</label>
                   <div class="h-10 bg-gray-50 flex border border-gray-200 rounded items-center mt-1">
                     <input  id="state" placeholder="State"
                       class="px-4 appearance-none outline-none text-gray-800 w-full bg-transparent" value="" />
                       <select name="state" class="border-none bg-transparent flex-1 cursor-pointer appearance-none focus:outline-none">
                         <option value="KL">kerala</option>
                         <option value="TN">tamil nadu</option> 
                         <option value="GA">goa</option>
                         <option value="KN">karnataka</option>
                         <option value="MH">maharashtra</option>
                         <option value="AN">andra</option>
                         <option value="kl" selected="selected">kerala</option>
                     </select>
                   </div>
                 </div>

                 <div class="md:col-span-1">
                   <label for="">Pin code</label>
                   <input oninput="pinValidation()" type="text" name="zipcode" id="zipcode"
                     class="transition-all flex items-center h-10 border mt-1 rounded px-4 w-full bg-gray-50"
                     placeholder="" value=""  />
                     <p id="zipcodeError" class="text-xs text-red-500"></p>
                 </div>

                 <div class="md:col-span-5 text-right">
                   <div class="inline-flex items-end">
                     <button type="submit" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">Submit</button>
                   </div>
                 </div>
                 
               </div>
             </div>
                <p  id="alert" class="text-red-600 text-xs "></p>

             </form>
         
           </div>
         </div>
       </div>



     </div>
   </div>
 </div>


   <!-- Include Tailwind JS for toggling modal visibility -->
   <script src="https://cdn.jsdelivr.net/npm/alpinejs@2.8.2/dist/alpine.min.js" defer></script>

   <script>
     // Alpine.js script to toggle modal visibility
     document.getElementById('openModal').addEventListener('click', function () {
       document.getElementById('myModal').classList.remove('hidden');
       document.getElementById('myModal').classList.add('flex');
     });

     document.getElementById('closeModal').addEventListener('click', function () {
       document.getElementById('myModal').classList.add('hidden');
       document.getElementById('myModal').classList.remove('flex');
     });
   </script>

<script>
function v(){
  const name = document.getElementById("full_name").value;
    const address = document.getElementById("address").value;
    const alert = document.getElementById("alert");

    if (address.trim() === "" || name.trim() === "" ) {
            alert.innerHTML="please fill all the field"
            return false; 
          }
 return nameValidation() 
}
</script>

<script>
 function nameValidation() {
 const name = document.getElementById("full_name").value.trim();
 const nameError = document.getElementById("nameError");
 
 // Regular expression to check if the name contains only letters
 const onlyLettersRegex = /^[a-zA-Z]+$/;

 if (name === '') {
     nameError.innerText = "Name cannot be empty";
     return false; // Indicate validation failure
 } else if (!onlyLettersRegex.test(name)) {
     nameError.innerText = "Name can only contain letters";
     return false; // Indicate validation failure 
 } else if (name.length < 5) {
     nameError.innerText = "Name should be at least 5 characters long";
     return false; // Indicate validation failure
 } else {
     nameError.innerText = ""; // Clear error message
     return true; // Indicate validation success
 }
}


 function addressValidation() {
 const name = document.getElementById("address").value.trim();
 const nameError = document.getElementById("addressError");

 if (name === '' ) {
     nameError.innerText = "Can not add space";
     return false; // Indicate validation failure
 } else if(name.length > 30 ){
     nameError.innerText = "words should not exceed above 30";
     return false; // Indicate validation failure
 }
 else {
     nameError.innerText = ""; // Clear error message
     return true; // Indicate validation success
 }
}

function numberValidation() {
 const name = document.getElementById("phone").value.trim();
 const nameError = document.getElementById("phoneError");

 if (name === '' ) {
     nameError.innerText = "Can not add space";
     return false; // Indicate validation failure
 } else if(name.length > 10 ){
     nameError.innerText = "number should not exceed above 10";
     return false; // Indicate validation failure
 }else if(isNaN(name)){
   nameError.innerText = "should be number"
     }
 else {
     nameError.innerText = ""; // Clear error message
     return true; // Indicate validation success
 }
}


function pinValidation() {
 const name = document.getElementById("zipcode").value.trim();
 const nameError = document.getElementById("zipcodeError");

 if (name === '' ) {
     nameError.innerText = "Can not add space";
     return false; // Indicate validation failure
 } else if(name.length > 6 ){
     nameError.innerText = "number should not exceed above 6";
     return false; // Indicate validation failure
 }else if(isNaN(name)){
   nameError.innerText = "should be number"
     }
 else {
     nameError.innerText = ""; // Clear error message
     return true; // Indicate validation success
 }
}

</script>


 <!-- ++++++++++++++++++++++++++++++++++++++++++++++++     END ADD ADDRESS    ++++++++++++++++++++++++++++++++++++++++++++++++++ -->


 <!-- ++++++++++++++++++++++++++++++++++++++++++++++++     view ADDRESS    ++++++++++++++++++++++++++++++++++++++++++++++++++ -->

            <div class="rounded-md ">
                <form id="payment-form" method="POST" action="">
                    <section>
                        <h2 class="uppercase tracking-wide text-lg font-semibold text-gray-700 my-2">Shipping & Billing Information</h2>
                        <fieldset class="mb-3 bg-white shadow-lg rounded text-gray-600">
                            <label class="flex border-b border-gray-200 h-12 py-3 items-center">
                                <span class="text-right px-2">Name</span>
                                <p id="addressName" class="ml-4"><%= addressDetails.full_name %></p>
                            </label>
                           
                            <label class="flex border-b border-gray-200 h-12 py-3 items-center">
                                <span class="text-right px-2">Address</span>
                                <p class="ml-4"><%= addressDetails.address %></p>
                            </label>
                            <label class="flex border-b border-gray-200 h-12 py-3 items-center">
                                <span class="text-right px-2">Phone</span>
                                <p class="ml-4"><%= addressDetails.phone %></p>
                            </label>
                            <label class="flex border-b border-gray-200 h-12 py-3 items-center">
                                <span class="text-right px-2">City</span>
                                <p class="ml-4"><%= addressDetails.city %></p>
                            </label>
                            <label class="inline-flex w-2/4 border-gray-200 py-3">
                                <span class="text-right px-2">State</span>
                                <p class="ml-4"> <%= addressDetails.state %></p>
                            </label>
                            <label class="xl:w-1/4 xl:inline-flex  items-center flex xl:border-none border-t border-gray-200 py-3">
                                <span class="text-right px-2 xl:px-0 xl:text-none">ZIP</span>
                                <p class="ml-4"><%= addressDetails.zipcode %></p>
                            </label>
                            <label class="flex border-t border-gray-200 h-12 py-3 items-center select relative">
                                <span class="text-right px-2">Country</span>
                                <p class="ml-4"><%= addressDetails.country %></p>
                            </label>
                        </fieldset>
                    </section>
                </form>
            </div>

              
            <button onclick="selectAddress()" class=" bg-green-500 text-white py-2 px-4 rounded  ml-5">SELECT ADDRESS</button>

                
                 <%  if(addressDetails){  %>
               
                  <%  }else{ %>
                  <p class="underline text-xl">Pleace select address</p>
                   <%  }  %>
                 
             

 <!-- ++++++++++++++++++++++++++++++++++++++++++++++++     END VIEW ADDRESS    ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
 
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++    SELECT ADDRESS    ++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- address part -->

<div class="grid grid-cols-1 sm:grid-cols-3 gap-6 mb-14 p-2 ">
  <% addressColection.forEach(addressColection=>{ %>
    <div class="bg-white overflow-hidden shadow rounded-lg border">

          <div class=" py-5 sm:px-6 font-bold">
          <input class="selectad" id="selectAd" data-address-id="<%=addressColection._id%>" type="radio" name="select" >     
              Address
          </div>
      <div class=" border-t border-gray-200  py-5 sm:p-0">
              <dl class="sm:divide-y sm:divide-gray-200">
                  <div class="py-3 sm:py-5 sm:grid sm:grid-cols-3 sm:px-6">
                      <dt class="text-sm font-medium text-gray-500">
                          Address
                      </dt>
                      <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
                        <%=addressColection.address %> <br>
                        <%=addressColection.city %> ,<%=addressColection.state %><br>
                        <%=addressColection.zipcode %> <br>
                                      <%=addressColection.country %> 
                      </dd>
                  </div>
              </dl>
          </div>
          <div class="py-3 sm:py-5 sm:grid sm:grid-cols-3  sm:px-6">
              <dt class="text-sm font-medium text-gray-500">
                  Actions
              </dt>
              <dd class="mt-1 text-sm font-bold text-black sm:mt-0  sm:col-span-2">
                  <button class="btn btn-primary sm:gap-16">  <a type="button" href="#" onclick="showModal()"
                    class="editAddress bg-blue-500 text-white font-bold    rounded inline-block"
                    data-product-id="<%=addressColection._id %>" data-mydata='{"key1": "<%=addressColection.full_name %>", "key2": "<%=addressColection.email %>" ,"key3": "<%=addressColection.address %>", "key4": "<%=addressColection.phone %>" ,"key5": "<%=addressColection.city %>", "key6": "<%=addressColection.country %>" ,"key7": "<%=addressColection.state %>" ,"key8": "<%=addressColection.zipcode %>" }'  >
                    EDIT
                  </a>
                </button>

                  <button class="btn btn-danger"> <a href="/removeAddress/<%=addressColection._id %>" class="bg-orange-400 text-white font-bold rounded inline-block">
                    REMOVE
                  </a></button>
              </dd>
          </div>
      </div>
      <% }) %>
</div>

<script>
  let a='';
  let select = document.querySelectorAll(".selectad");
  select.forEach((value)=>{
    value.addEventListener("change",()=>{
  addressId = value.dataset.addressId
})
})
function selectAddress(){
window.location.href = `/checkout?id=${addressId}`
    }
</script>
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++  END SELECT ADDRESS    ++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++  EDIT ADDRESS    ++++++++++++++++++++++++++++++++++++++++++++++++++ -->



  <div id="editModel" class="fixed inset-0 z-50 hidden overflow-auto bg-black bg-opacity-50">
    <div class="flex items-center justify-center h-full">
      <div class="bg-white p-8 rounded shadow-lg">

        <div class="flex justify-end">
          <button id="editCloseModal" class="text-gray-600 hover:text-gray-800">&times;</button>
        </div>

        <div>
          <h2 class="font-semibold text-xl text-gray-600">EDIT ADDRESS</h2>

          <div class="bg-white rounded shadow-lg p-4 px-4 md:p-8 mb-6">
            <div class="grid gap-4 gap-y-2 text-sm grid-cols-1 lg:grid-cols-3">
              <div class="text-gray-600">
                <p class="font-medium text-lg">Personal Details</p>
                <p>Add your personal details.</p>
              </div>
                   <form id="formId" action="" method="post">
              <div class="lg:col-span1">
                <div class="grid gap-4 gap-y-2 text-sm grid-cols-1 md:grid-cols-5">

                  <div class="md:col-span-3">
                    <label for="">Full Name</label>
                    <input type="text" name="full_name1" id="full_name1" oninput="nameValidation1()"
                      class=" h-10 border mt-1 rounded px-4 w-full bg-gray-50"  />
                      <p id="nameError1" class="text-xs text-red-500"></p>

                    </div>

                  
                  <div class="md:col-span-2">
                    <label for="Phone">Phone number</label>
                    <input type="text" name="Phone1" id="Phone1" oninput="numberValidation1()"
                      class="transition-all flex items-center h-10 border mt-1 rounded px-4 w-full bg-gray-50"
                      placeholder=""/>
                      <p id="phoneError1" class="text-xs text-red-500"></p>

                    </div>

                  <div class="md:col-span-3">
                    <label for="address">Address / Street</label>
                    <input type="text" name="address1" id="address1"  oninput="addressValidation1()"
                      class="h-10 border mt-1 rounded px-4 w-full bg-gray-50" value="" placeholder="" />
                      <p id="addressError1" class="text-xs text-red-500"></p>

                    </div>

                  <div class="md:col-span-2">
                    <label for="city">City</label>
                    <input type="text" name="city1" id="city1" class="h-10 border mt-1 rounded px-4 w-full bg-gray-50"
                      value="" placeholder="" />
                  </div>

                  <div class="md:col-span-2">
                    <label for="country">Country / region</label>
                    <div class="h-10 bg-gray-50 flex border border-gray-200 rounded items-center mt-1">
                      <input name="country1" id="country1" placeholder="Country"
                        class="px-4 appearance-none outline-none text-gray-800 w-full bg-transparent" value="" />
                      <button tabindex="-1"
                        class="cursor-pointer outline-none focus:outline-none transition-all text-gray-300 hover:text-red-600">
                        
                      </button>
                     
                    </div>
                  </div>

                  <div class="md:col-span-2">
                    <label for="state">State / province</label>
                    <div class="h-10 bg-gray-50 flex border border-gray-200 rounded items-center mt-1">
                      <input name="state1" id="state1" placeholder="State"
                        class="px-4 appearance-none outline-none text-gray-800 w-full bg-transparent" value="" />
                    
                     
                    </div>
                  </div>

                  <div class="md:col-span-1">
                    <label for="zipcode">Pin code</label>
                    <input type="text" name="zipcode1" id="zipcode1" oninput="pinValidation1()"
                      class="transition-all flex items-center h-10 border mt-1 rounded px-4 w-full bg-gray-50"
                      placeholder="" value="" />
                      <p id="zipcodeError1" class="text-xs text-red-500"></p>

                  </div>

                  <div class=md:col-span-5 text-right">
                    <div class="inline-flex items-end">
                      <button onclick="updateAction()" type="submit" id="submit" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">Submit</button>
                    </div>
                  </div>

                </div>
              </div>
            </form>

            </div>
          </div>
        </div>

      </div>
    </div>
  </div>

  <script>
    let mod= document.getElementById('editModel')
    let productId
    // Alpine.js script to toggle modal visibility
    const editAddress= document.querySelectorAll('.editAddress')
    editAddress.forEach(element => {
      element.addEventListener('click', function () {
        mod.classList.remove('hidden');
        let name = document.getElementById("full_name1");
        let address = document.getElementById("address1");
        let city = document.getElementById("city1");
        let country = document.getElementById("country1");
        let state = document.getElementById("state1");
        let zipcode = document.getElementById("zipcode1");
        let Phone1 = document.getElementById("Phone1");
        
      productId = element.dataset.productId;

      var myObject = JSON.parse(element.dataset.mydata);  
      console.log(myObject);
       console.log(myObject);
       name.value =myObject.key1
       address.value = myObject.key3
       Phone1.value = myObject.key4
       city.value = myObject.key5
       country.value = myObject.key6
       state.value = myObject.key7
       zipcode.value = myObject.key8  
      });
    });
    document.getElementById('editCloseModal').addEventListener('click', function () {
      console.log("hai");
      mod.classList.add('hidden');
    });

 
   function updateAction(){
    formId.action = `/editAddress/${productId}`
   }

   
  </script>

<script>
 

    function nameValidation1() {
    const name = document.getElementById("full_name1").value.trim();
    const nameError = document.getElementById("nameError1");
    
    // Regular expression to check if the name contains only letters
    const onlyLettersRegex = /^[a-zA-Z]+$/;

    if (name === '') {
        nameError.innerText = "Name cannot be empty";
        return false; // Indicate validation failure
    } else if (!onlyLettersRegex.test(name)) {
        nameError.innerText = "Name can only contain letters";
        return false; // Indicate validation failure
    } else if (name.length < 5) {
        nameError.innerText = "Name should be at least 5 characters long";
        return false; // Indicate validation failure
    } else {
        nameError.innerText = ""; // Clear error message
        return true; // Indicate validation success
    }
}

    function addressValidation1() {
    const name = document.getElementById("address1").value.trim();
    const nameError = document.getElementById("addressError1");

    if (name === '' ) {
        nameError.innerText = "Can not add space";
        return false; // Indicate validation failure
    } else if(name.length > 15 ){
        nameError.innerText = "words should not exceed above 15";
        return false; // Indicate validation failure
    }
    else {
        nameError.innerText = ""; // Clear error message
        return true; // Indicate validation success
    }
}

function numberValidation1() {
    const name = document.getElementById("Phone1").value.trim();
    const nameError = document.getElementById("phoneError1");

    if (name === '' ) {
        nameError.innerText = "Can not add space";
        return false; // Indicate validation failure
    } else if(name.length > 10 ){
        nameError.innerText = "number should not exceed above 10";
        return false; // Indicate validation failure
    }else if(isNaN(name)){
      nameError.innerText = "should be number"
        }
    else {
        nameError.innerText = ""; // Clear error message
        return true; // Indicate validation success
    }
}


function pinValidation1() {
    const name = document.getElementById("zipcode1").value.trim();
    const nameError = document.getElementById("zipcodeError1");

    if (name === '' ) {
        nameError.innerText = "Can not add space";
        return false; // Indicate validation failure
    } else if(name.length > 6 ){
        nameError.innerText = "number should not exceed above 6";
        return false; // Indicate validation failure
    }else if(isNaN(name)){
      nameError.innerText = "should be number"
        }
    else {
        nameError.innerText = ""; // Clear error message
        return true; // Indicate validation success
    }
}

</script>
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++  END EDIT ADDRESS    ++++++++++++++++++++++++++++++++++++++++++++++++++ -->


 
 <!-- ++++++++++++++++++++++++++++++++++++++++++++++++      ORDER SUMMARY    ++++++++++++++++++++++++++++++++++++++++++++++++++ -->

        </div>
        <div class="col-span-1 bg-white pb-10 lg:block hidden">
            <h1 class="py-6 border-b-2 text-xl text-gray-600 px-8">Order Summary</h1>
           

            <div style="height: 300px; overflow-y: auto;">
                <ul class="py-6 border-b space-y-6 px-8">
                    <!-- Your list items go here -->    
                    <% let subtotal= 0 %>
                    <% let sizeLib = {
                      0 : 's',
                      1 : 'm',
                      2 : 'l',
                      3 : 'xl'
                    } %>
                    <% checkUser.forEach((prod)=> { %> 
                    <% prod.products.size.forEach((val , idx)=>{  %>
                    <% if (val !== 0) {%>
                    <li class="grid grid-cols-6 gap-2 border-b-1">
                            <div class="col-span-1 self-center">
                                <img src="<%=prod.cartProduct[0].product_img_url[0]%>" alt="Product" class="rounded w-full">
                            </div>
                            <div class="flex flex-col col-span-3 pt-2">
                                <span class="text-gray-600 text-md font-semi-bold"><%= prod.cartProduct[0].product_name%></span>
                                <span class="text-gray-400 text-sm inline-block pt-2"><%= prod.cartProduct[0].product_brand%></span>
                                <span class="text-gray-400 text-xs inline-block pt-2"><%= sizeLib[idx]%></span>

                              </div>
                            <div class="col-span-2 pt-3">
                                <div class="flex items-center space-x-2 text-sm justify-between">
                                    <span class="text-gray-400"><%= val %> </span>
                                    <span class="text-gray-900 font-semibold inline-block"> <%= prod.cartProduct[0].product_price * val %></span>
                                </div>
                            </div>
                    </li>
                    <% subtotal = subtotal + ( prod.cartProduct[0].product_price * val ) %> 
                    <% } %>
                    <% }) %>
                    <% }) %>
                </ul>
            </div>
            
            
            <div class="px-8 border-b border-t">
                <div class="flex justify-between py-4 text-gray-600">
                    <span>Subtotal</span>
                    <span class="font-semibold text-gray-900"><%=subtotal%></span>
                </div>
                <div class="flex justify-between py-4 text-gray-600">
                    <span>Shipping</span>
                    <span class="font-semibold text-gray-900"> + $10.00</span>
                </div>
                <% let copounField %>
                <% let copName %>
                <% let copValue %>
                <%copounField = coupounData.filter((price)=>{ %>
                      <% return subtotal >= price.minimumPurchase %>
                  <% })%>
                  <%copName = copounField[copounField.length-1]%>

                 <% if(copName.discountType == 'percentage'){ %>
                              <% copValue = (subtotal * copName.couponValue )/100%>
                        <%=copName.discountType ?? '' %>
                      <%}else{%>
                      <%copValue=copName.couponValue%>
                   <% } %>
                   <p hidden id="coponId"  data-cop-val="<%=copValue%>" data-cop-id="<%=copName._id%>"></p>
                
                   <div class="flex justify-between py-4 text-gray-600">
                    <span>Coupon</span>
                    <select name="" id="selectCpn"  class="px-2 py-1 ">
                      <option value=""></option>
                      <option value="<%= copName == '' ? 'No Coupon Available' : copName.couponName %>">
                        <%= copName == '' ? 'No Coupon Available' : copName.couponName %>
                      </option>
                    </select>
                  </div >
                  <div class="flex justify-end">
                    <span class="text-sm underline mr-7">  <%= copName == '' ? '' : copName.couponValue ,copName.discountType %> off on this coupon</span>
                    <button type="submit" id="applyBtn" class="bg-blue-500 text-white font-bold py-1 px-3 rounded">
                      APPLY
                    </button>
                  </div>
            </div>
            <div class="font-bold text-xl px-8 flex justify-between py-8 text-gray-600">
                <span>Total :-</span>
                <span id="subtotalValue" data-order-id="<%=checkUser[0]._id%>" dsts-price-subtotal="<%=subtotal+10%>">$ <%=subtotal + 10 %></span>
            </div>
            <div class="rounded-md mt-3">
              <section  class=" text-center">
                  <h2 class="uppercase tracking-wide text-lg font-semibold text-gray-700 underline">Payment method </h2>
                    <div class="flex gap-6 justify-center pt-3">

                      <label class="flex">
                        <input type="radio" name="buyOption" value="COD" class="pb-2">
                        <span class=""> COD</span>
                      </label>
                    
                      <label class="flex">
                        <input type="radio" name="buyOption" value="ONLINE" class="">
                        <span> ONLINE PAY  </span>
                      </label>
                      </div>
              </section>
          </div>
        <%  if(addressDetails){  %>
          <button onclick="checkoutPost()" class="submit-button px-4 py-3 mt-3 rounded-full bg-gray-400 text-white focus:ring focus:outline-none w-full text-xl font-semibold transition-colors">
            BUY
           </button>
        <%  }else{ %>
        <p class="text-center text-red-500 pt-9"><- Please add address to buy</p>
         <%  }  %>
        </div>
        
    </div>

  

    
 <!-- ++++++++++++++++++++++++++++++++++++++++++++++++     END ORDER SUMMARY   ++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <%- include("../partials/footer.ejs") %>

<!-- Add this script tag in the head or body of your HTML -->
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
  
       let subtotalValue = document.getElementById('subtotalValue');
       let subtotalAttributeValue;
       let copId ;
       subtotalAttributeValue = subtotalValue.getAttribute('dsts-price-subtotal');
  const applyBtn = document.getElementById('applyBtn')
  applyBtn.addEventListener('click',()=>{
    const selectCpn = document.getElementById('selectCpn').value
       if(selectCpn){
      const copdat = document.getElementById('coponId');
           copvalue = copdat.getAttribute('data-cop-val')
           copId = copdat.getAttribute('data-cop-id')
           subtotalAttributeValue  = Math.floor(subtotalAttributeValue - copvalue)
           console.log(subtotalAttributeValue);
    subtotalValue.innerHTML = subtotalAttributeValue
    
     
        Toastify({
          text: "Coupon added",
          duration: 1000,
          destination: "https://github.com/apvarun/toastify-js",
          newWindow: true,
          close: true,
          gravity: "top", // `top` or `bottom`
          position: "right", // `left`, `center` or `right`
          stopOnFocus: true, // Prevents dismissing of toast on hover
          style: {
            background: " #4CAF50  ",
          },
          onClick: function(){
            alert("Toast clicked!");
          }
        }).showToast();
        
        applyBtn.disabled = true;
    }
  })
</script>
    <script>
         let selectedValue ;
      
  document.addEventListener('DOMContentLoaded', function () {
    const radioButtons = document.querySelectorAll('input[type="radio"][name="buyOption"]');
    radioButtons.forEach(function (radioButton) {
      radioButton.addEventListener('change', function () {
           selectedValue = this.value;
           console.log(selectedValue);
     
      });
    });
  });
       function checkoutPost(event){

        console.log(selectedValue);
        if (selectedValue== 'COD') {
          cod();
        }else if(selectedValue == 'ONLINE'){
          pay();
        }else{
          Toastify({
          text: "Select Payment mode",
          duration: 1000,
          destination: "https://github.com/apvarun/toastify-js",
          newWindow: true,
          close: true,
          gravity: "top", // `top` or `bottom`
          position: "center", // `left`, `center` or `right`
          stopOnFocus: true, // Prevents dismissing of toast on hover
          style: {
            background: " #c20c0c  ",
          },
          onClick: function(){
            alert("Toast clicked!");
          }
        }).showToast();
        
        }
      }


        function cod() {

        let ordId = subtotalValue.getAttribute('data-order-id');
  

          fetch("/orderPost",{
            method : "POST",
            headers:{
                'Content-Type' : 'application/json' ,
            },
            body:JSON.stringify({subtotalAttributeValue,ordId,copId})
          }).then(res=>res.json())
          .then((data)=>{
            console.log("success");
          }).catch((errror)=>{
            console.log(errror);
          })
          window.location.href = `/checkoutComplete`
        }
      

function pay(){
          // const totalprice = document.getElementById('totalprice').innerText
          // const totalprice = subtotalValue.getAttribute('dsts-price-subtotal');
          let ordId = subtotalValue.getAttribute('data-order-id');


            fetch('/razorpay', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({
                'amount': subtotalAttributeValue
              }),
            })
              .then(response => response.json())

              .then(data => {
                const orderId = data.orderId;
                const addressid = data.addressid
                console.log("OrderId received:", addressid);


                // let paymentMode = document.getElementById('payment').selector.value
                // const addressdetails = document.getElementById('address')
                // const addressdata = addressdetails.getAttribute('data-address')
                var options = {
                  "key": "rzp_test_llt7AmvYnR8R68", // Enter the Key ID generated from the Dashboard
                  "amount":Number(subtotalAttributeValue)*100, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
                  "currency": "INR",
                  "name": "Nexus", //your business name
                  "description": "Test Transaction",
                  "image": "",
                  "order_id": orderId, //This is a sample Order ID. Pass the id obtained in the response of Step 1
                  "callback_url": "/confirmation",
                  // "prefill": { //We recommend using the prefill parameter to auto-fill customer's contact information especially their phone number
                  //   "name": "Gaurav Kumar", //your customer's name
                  //   "email": "gaurav.kumar@example.com",
                  //   "contact": "7902371571" //Provide the customer's phone number for better conversion rates 
                  // },
                  "notes": {
                    "amount": subtotalAttributeValue,
                    "orderId": ordId,
                    'copId' : copId,
                  },
                  "theme": {
                    "color": "#3399cc"
                  }
                };
                var rzp1 = new Razorpay(options);
                rzp1.open();
                e.preventDefault();

              })
              .catch(error => console.error('Error:', error));
}
</script>




</body>
</html>