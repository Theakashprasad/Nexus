<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Add Product</title>
  <!-- Add Tailwind CSS CDN link here -->
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.16/dist/tailwind.min.css" rel="stylesheet">
  <style>
    body {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
    }

    .container {
      width: 70%;
    }
  </style>
</head>

<body class="bg-gray-100 mt-64 ">
  <div class="container mx-auto p-10 ">
    <a href="/admin/product"class="absolute top-3 right-64 text-gray-400 hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8  flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white close-coupon-Box-edit">
      <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
          d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
      </svg>
    </a>
    <h1 class="text-2xl font-semibold mb-4">EDIT PRODUCT</h1>
    <form class="bg-white shadow-md rounded-lg px-8 pt-6 pb-8 mb-4" action="/admin/editProductPost/<%=user._id%>"
      method="post" enctype="multipart/form-data"  onsubmit="return v()"  >

      <!-- product Name -->
      <div class="mb-4">
        <label   class="block text-gray-700 text-sm font-bold mb-2">Product Name</label>
        <input oninput="nameValidation()" type="text" id="productName" name="productName" value="<%=user.product_name%>" 
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
          required>
      </div>
      <p id="NameError" class="text-red-500"></p>


         <!-- Description  -->
         <div class="mb-4">
          <label for="" class="block text-gray-700 text-sm font-bold mb-2">Description</label>
          <input type="text" id="dicrp" name="description" value="<%=user.product_description%>" oninput="discValidation()"
            class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
            required>
        </div>
        <p id="dicripError" class="text-red-500"></p>


           <!-- Category  -->
           <div class="mb-4">
            <label for="category" class="block text-gray-700 text-sm font-bold mb-2">Category</label>
            <select id="category" name="category" value=" <%= user.product_category %>"
              class="shadow appearance-none border  rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
              required > 
              <!-- show  all the category in this product list   using foreach method  -->
              <% displayCategory.forEach((list, index)=> { %> 
                <option value="<%= list.product_category %>" <% if (list.product_category === user.product_category) { %> selected <% } %>>
                  <%= list.product_category %> 
                </option>
                <% }) %> 
            </select>
          </div>

         <!--  Price -->
         <div class="mb-4">
          <label for="" class="block text-gray-700 text-sm font-bold mb-2">Price</label>
          <input oninput="priceValidation()" type="number" id="price" name="price" value="<%=user.product_price%>"
            class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
            required>
        </div>
        <p id="PriceError" class="text-red-500"></p>


      <!-- Quantity -->
      <div class="mb-4">
        <label for="quantity1" class="block text-gray-700 text-sm font-bold mb-2">SIZE 6</label>
        <input oninput="quantityValidation('quantity1')" type="text" id="quantity1" name="quantity1" value="<%=user.size[0]%>"
            class="shadow appearance-none border rounded  py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
        
        <label for="quantity2" class="block text-gray-700 text-sm font-bold mb-2">SIZE 7</label>
        <input oninput="quantityValidation('quantity2')" type="text" id="quantity2" name="quantity2" value="<%=user.size[1]%>"
            class="shadow appearance-none border rounded  py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
    
        <label for="quantity3" class="block text-gray-700 text-sm font-bold mb-2">SIZE 8</label>
        <input oninput="quantityValidation('quantity3')" type="text" id="quantity3" name="quantity3" value="<%=user.size[2]%>"
            class="shadow appearance-none border rounded  py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
    
        <label for="quantity4" class="block text-gray-700 text-sm font-bold mb-2">SIZE 9</label>
        <input oninput="quantityValidation('quantity4')" type="text" id="quantity4" name="quantity4" value="<%=user.size[3]%>"
            class="shadow appearance-none border rounded  py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
    </div>
    <p id="quantityError" class="text-red-500"></p>


      
   <!-- brand -->
   <div class="mb-4">
    <label for="" class="block text-gray-700 text-sm font-bold mb-2">Brand</label>
    <input type="text" id="brand" name="brand" value="<%=user.product_brand%>" oninput="brandValidation()"
      class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
      required>
  </div>
      <p id="brandError" class="text-red-500"></p>

    
        
       <!-- Category Image -->
       <div class="mb-4 w-28">
        <label for="productImage" class="block text-gray-700 text-sm font-bold mb-2">Images</label>
        <input multiple type="file" id="categoryImage" name="image" 
          class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
          accept="image/*">
          <img src="<%=user.product_img_url[0]%>" alt="no image">
      </div>
      


      <div class="flex items-center justify-between">
        <button type="submit"
          class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline">
          save
        </button>
        <p id="filleroor" class="text-red-500"></p>

      </div>
    </form>
  </div>
  

  <script>
    
  // function v(){
  //  return nameValidation() && qantityValidation() && priceValidation()
  // }


  function v(){
    productName = document.getElementById("productName").value.trim();
      discription = document.getElementById("dicrp").value.trim();
      filleroor = document.getElementById("filleroor");
      brand = document.getElementById("brand").value.trim();


      if(productName ==='' ||  discription === '' || brand == ''){
        console.log('kdsjksd');
        filleroor.innerText = "Please fill all the fields";
      return false;
    }
     return nameValidation() && qantityValidation() && priceValidation() && discValidation()
    }



           function nameValidation(){
             productName = document.getElementById("productName").value.trim();
             NameError = document.getElementById("NameError");
             const onlyLettersRegex = /^[a-zA-Z]+$/;
             if(productName===""){
               NameError.innerText = "Can not add spaces";
              return false
            }
            else {
              NameError.innerText = ""; // Clear error message
        return true; // Indicate validation success
    }
            }

        
    function quantityValidation(quantityId) {
        const quantity = document.getElementById(quantityId).value;
        const quantityError = document.getElementById("quantityError");

        if (quantity < 0) {
            quantityError.innerText = "Quantity should not be less than 0";
            return false;
        } else if (isNaN(quantity)) {
            quantityError.innerText = "Quantity should be a number";
            return false;
        } else {
            quantityError.innerText = "";
            return true;
        }
    }


    function discValidation(){
                console.log('dicriop');
               discription = document.getElementById("dicrp").value.trim();
               dicripError = document.getElementById("dicripError");
               const onlyLettersRegex = /^[a-zA-Z]+$/;

               if(discription==""){
                dicripError.innerText = "Can not add spaces";
                return false
              } else if (!onlyLettersRegex.test(discription)) {
                dicripError.innerText = "Name can only contain letters";
                      return false; // Indicate validation failure    
              }
               else {
                dicripError.innerText = ""; // Clear error message
          return true; // Indicate validation success
      }
              }



           function priceValidation(){
            const price = document.getElementById("price").value;
            const PriceError = document.getElementById("PriceError");
            if(price<0){
              PriceError.innerText = "price should not be less than 0"
          return false
        }else if(isNaN(quantity)){
          PriceError.innerText = "should be number"
        }else{
          PriceError.innerText = ""
          return true; 
        }        
         }
         
         function brandValidation(){
               productName = document.getElementById("brand").value.trim();
               branderror = document.getElementById("brandError");
               const onlyLettersRegex = /^[a-zA-Z]+$/;
               if(productName==""){
                branderror.innerText = "Can not add spaces";
                return false
              }else if (!onlyLettersRegex.test(productName)) {
                branderror.innerText = "Name can only contain letters";
        return false; // Indicate validation failure  
              } else {
                branderror.innerText = ""; // Clear error message
          return true; // Indicate validation success
      }
              } 

  </script>

</body>
</html>
