<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="/dist/output.css">
  <!-- font-awesome -->
  <script src="https://kit.fontawesome.com/72e1a8d80d.js" crossorigin="anonymous"></script>

</head>
<body>
    

  <%- include("../partials/adminNavBar.ejs") %>
  <%- include("../partials/sidebar.ejs") %>  
    
<!-- main model for add coupon -->
<div class="create-section">
   <div class="openCoupon hidden  fixed top-0 left-0 right-0 z-50 overflow-x-hidden overflow-y-auto md:inset-0 h-[calc(100%-1rem)] ">
   <p class="absolute bg-gray-900 h-full w-full opacity-80"></p>
     <div class="fixed inset-0 flex items-center justify-center">
       <!-- Modal content -->
       <div class="relative  bg-white rounded-lg shadow dark:bg-gray-700 w-[500px]">
         <button type="button" 
           class="absolute top-3 right-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white close-coupon-Box"
           data-modal-hide="authentication-modal">
           <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
             <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
               d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
           </svg>
          
         </button>
         <div class="px-6 py-6 lg:px-8">
           <h3 class="mb-4 text-xl font-medium text-gray-900 dark:text-white">Create Offer</h3>
  
           <form class="space-y-6" action="/admin/offerAdd" method="post" onsubmit="return validateForm()">
            <div>
              <label for="coupon-name" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Offer Name</label>
              <input type="text" id="couponName" oninput="nameValidation()" name="couponName" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white">
              <p id="nameError" class="text-red-500 text-xs"></p>
            </div>
          
            <label for="" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white" id="couponTypeTitle">Offer Value</label>
            <input type="text" id="couponValue" oninput="OfferValue()" name="couponValue" placeholder="Percentage" type="number" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white">
            <span id="valueError" class="errorMsg text-red-500"></span>
              
          
            <label for="couponMinimumPurchase" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Minimum Purchase</label>

            <div class="flex justify-evenly">
  <!-- First button and select field -->

  <button type="button" class="bg-gradient-to-r from-blue-500 to-indigo-500 text-white px-4 py-2 rounded" onclick="toggleSelect('select1')">CATEGORY</button>

  <select id="select1" class="hidden mt-4 p-2 border rounded" name="category">
    <option value=""></option>
    <%categoryData.forEach((cat)=>{%>
      <option value="<%=cat.product_category%>">
        <%=cat.product_category%>
      </option>
       <% })%>
  </select>

  <!-- Second button and select field -->
  <button type="button" class="bg-gradient-to-r from-blue-500 to-indigo-500 text-white px-4 py-2 rounded" onclick="toggleSelect('select2')">PRODUCT</button>

  <select id="select2" class="hidden mt-4 p-2 border rounded" name="product">
    <option value=""></option>
    <%productData.forEach((pro)=>{%>
      <option value="<%=pro.product_name%>">
        <%=pro.product_name%>
      </option>
       <% })%>
  </select>
</div>
<div id="selectError" class="text-red-500 text-sm"></div>

            <label for="validFrom" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Valid from</label>
            <input type="date" id="validFrom" name="validFrom" value="<%= new Date().toISOString().slice(0, 10) %>" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white">

            <label for="validTo" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Valid to</label>
            <input type="date" id="validTo" name="validTo" value="<%= new Date().toISOString().slice(0, 10) %>" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white">
            <span class="alreadyExist text-red-600"></span>
          
            <div class="flex justify-end">
              <button type="submit" class="px-4 py-2 bg-blue-700 text-white rounded-md hover:bg-blue-700 focus:outline-none">
                SAVE
              </button>
            </div>
          </form>
          <div id="alert" class="text-red-500 text-sm"></div>

         </div>
       </div>
     </div>
   </div>
  </div>
    
  <!-- view offer -->

  <div class="p-4 sm:ml-64">
     <div class="p-4 border-2 border-gray-200  dark:border-gray-700 mt-14">
      <button  class="bg-blue-400 p-2 rounded m-4 text-white font-bold  " id="create-coupon-btn">Create Offer</button>

<!-- useer content -->
<div class="shadow-lg rounded-lg overflow-hidden mx-4 md:mx-10 pt-11">
   <table class="w-full table-fixed">
     <thead>
       <tr class="bg-gray-100">
         <th class="w-1/4 py-4 px-6 text-left text-gray-600 font-bold uppercase">Offer Name</th>
         <th class="w-1/4 py-4 px-6 text-left text-gray-600 font-bold uppercase">Product</th>
         <th class="w-1/4 py-4 px-6 text-left text-gray-600 font-bold uppercase">Offer value</th>
         <th class="w-1/4 py-4 px-6 text-left text-gray-600 font-bold uppercase">Valid From</th>
         <th class="w-1/4 py-4 px-6 text-left text-gray-600 font-bold uppercase">Valid To</th>
         <th class="w-1/4 py-4 px-6 text-left text-gray-600 font-bold uppercase">ACTION</th>

       </tr>
     </thead>
     <tbody class="bg-white">
      <%offerData.forEach((item)=>{%>
       <tr>
         <td class="py-4 px-6 border-b border-gray-200"><%=item.offerName%></td>
         <td class="py-4 px-6 border-b border-gray-200 truncate"><%=item.offerType %>
        </td>
         <td class="py-4 px-6 border-b border-gray-200 "><%=item.offerValue%>%</td>
         <td class="py-4 px-6 border-b border-gray-200 truncate"><%= new Date(item.validFrom ).toISOString().slice(0, 10) %> </td>
         <td class="py-4 px-6 border-b border-gray-200 truncate"><%= new Date(item.validTo ).toISOString().slice(0, 10) %> </td>
         <td class="px-6 py-4">
          <div class="flex gap-3"> 
          <div class="font-normal text-gray-500 ">
           <P class="coupon-edit" ><a href="/admin/offerEdit/<%=item._id%>"> <i class="fas fa-edit"></i></a></P>
          </div>
          <!-- <div class="font-normal text-gray-500">
              <a href="/admin/offerDel/<%=item._id%>">  <i class="fas fa-trash-alt"></i></a>
          </div> -->
          
          <div class="font-normal text-gray-500">
            <p class="coupon-edit">
              <a href="#" id="deleteCouponLink" data-couponid="<%=item._id%>">
                <i class="fas fa-trash-alt"></i>
              </a>
            </p>
          </div>

          </div>
        </td>
       </tr>
       <%})%>
       <!-- Add more rows here -->
     </tbody>
   </table>
 </div>
 
<section class="my-6">
  <div class="pagination flex justify-center gap-4">
    <% if (paginate.hasPreviousPages) { %>
      <a href="?page=<%= paginate.page - 1 %>"
        class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">Previous</a>
      <% } %>

        <% if (paginate.hasNextPages && page < maxPage) { %>
          <a href="?page=<%= paginate.page + 1 %>"
            class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-700 focus:bg-blue-700 focus:outline-none transition duration-300 ease-in-out">
            Next
          </a>
          <% } %>

  </div>
  <p class="text-gray-900 font-bold flex justify-center"><%= paginate.page %> out of <%= maxPage %></p>

</section>
 <script>
  const changeColour =document.getElementById("g");
  changeColour.style.backgroundColor = "#000000";
</script>
 <script>
  const createBtn = document.getElementById('create-coupon-btn');
  const createCouponBox = document.querySelector('.openCoupon');
  const closeCouponBox = document.querySelector('.close-coupon-Box');
  const couponForm = document.querySelector('.create-section form');
  
  createBtn.addEventListener('click', () => {
    createCouponBox.classList.remove('hidden');
  });
  
  closeCouponBox.addEventListener('click', () => {
    createCouponBox.classList.add('hidden');
  });
  
  </script>
  
  <script>
   function validateForm(){
    const name = document.getElementById("couponName").value;
    const alert = document.getElementById('alert');

    if (name.trim() === "" ) {
            alert.innerHTML="please fill all the field"
            return false; 
          }
      return offerCat()
   }


   function offerCat() {
  // Get references to the select elements and the error container
  const select1 = document.getElementById('select1');
  const select2 = document.getElementById('select2');
  const errorContainer = document.getElementById('selectError');

  // Check if neither select field is selected
  if (!select1.value && !select2.value) {
    // Display an error message
    errorContainer.textContent = 'Please select at least one option (Category or Product)';
    
    // Return false to prevent form submission
    return false;
  } else {
    // Clear any previous error message
    errorContainer.textContent = '';
    
    // Return true to allow form submission
    return true;
  }
}

    function toggleSelect(selectId) {
      const allSelects = document.querySelectorAll('select'); // Get all select elements
      allSelects.forEach(select => {
        if (select.id === selectId) {
          // Toggle the selected select
          select.classList.toggle('hidden');
        } else {
          // Hide other selects
          select.classList.add('hidden');
          select.selectedIndex = 0; // Reset to the first option (assuming the first option is an empty one)

        }
      });
    }
  </script>
<script>


function nameValidation() {
    const name = document.getElementById("couponName").value.trim();
    const nameError = document.getElementById("nameError");
    const onlyLettersRegex = /^[a-zA-Z]+$/;

    if (name === '' ) {
        nameError.innerText = "Can not add space";
        return false; // Indicate validation failure
    
 }  else if(name.length > 10 ){
        nameError.innerText = "name should exceed above 10";
        return false; // Indicate validation failure
    }
    else {
        nameError.innerText = ""; // Clear error message
        return true; // Indicate validation success
    }
}


function OfferValue() {
      const name = document.getElementById("couponValue").value.trim();
      const nameError = document.getElementById("valueError");
  
      if (name === '' ) {
          nameError.innerText = "Can not add space";
          return false; // Indicate validation failure
      }else if(isNaN(name)){
        nameError.innerText = "should be number"
          }else if(name >100){
        nameError.innerText = "should exeed 100"
          }
      else {
          nameError.innerText = ""; // Clear error message
          return true; // Indicate validation success
      }
  }

</script>

<script>
  document.getElementById('deleteCouponLink').addEventListener('click', function (event) {
    event.preventDefault(); // Prevents the default behavior (e.g., navigating to the href)
  
    var couponId = event.currentTarget.getAttribute('data-couponid');
    var alertMessage = "Are you sure you want to delete this coupon?";
    
    if (confirm(alertMessage)) {
      // User confirmed, proceed with the link navigation
      window.location.href = '/admin/offerDel/' + couponId; // Replace with your actual delete route
    } else {
      // User canceled, do nothing or add custom logic
    }
  });
  
  </script>
</body>
</html>